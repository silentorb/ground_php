<?php

if (!function_exists('drupal_add_http_header')) {
  function drupal_add_http_header($name, $value, $append = FALSE) {
    drupal_set_header($name . ': ' . $value);
  }

}

if (!function_exists('drupal_json')) {
  function drupal_json($var) {
    drupal_add_http_header('Content-Type', 'application/json');

    if (isset($var)) {
      echo json_encode($var);
    }
  }

}
function ground_php_menu() {
  $items['vineyard/model.json'] = array(
      'title' => 'Vineyard Model',
      'page callback' => 'ground_php_model',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
//  $items['vineyard/get'] = array(
//      'title' => 'Ground Get',
//      'page callback' => 'ground_php_get',
//      'access callback' => TRUE,
//      'type' => MENU_CALLBACK,
//  );
  $items['vineyard'] = array(
      'title' => 'Ground Get',
      'page callback' => 'ground_php_get',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['vineyard/update'] = array(
      'title' => 'Ground Update',
      'page callback' => 'ground_php_update',
      'access callback' => 'user_is_logged_in',
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function ground_php_initialize_ground() {
  if (Ground::$vineyard_ground)
    return Ground::$vineyard_ground;

  Ground::$vineyard_ground = $ground = new Ground(Ground::$default_database);
  $irrigation = $ground->irrigation = new Irrigation($ground);
  global $user;
  $irrigation->user = $user;

  module_invoke_all('vineyard', $ground, $irrigation);

  // Deprecated.
  module_invoke_all('ground', $ground, $irrigation);

  return $ground;
}

function ground_php_model() {
  $ground = ground_php_initialize_ground();
  drupal_add_http_header('Content-Type', 'application/json');
  $json = $ground->to_json();
  print $json;

  if ($_GET['update'] = 'true') {
    file_put_contents(realpath('./') . '/model.json', $json);
  }
}

function ground_php_get() {
  // For some reason I was having a problem with the typical Drupal routing and just did this for now.
  // It's more flexible if I want to get fancy with the REST.

  $result = new stdClass();
  try {
    $ground = ground_php_initialize_ground();

    if (!$ground)
      throw new Exception('Ground not initialized.', 500);

    if (!$ground->db)
      throw new Exception('Ground DB not initialized.', 500);

    $bag = Irrigation::create_bag_from_globals();
    $result = $ground->vineyard_service($bag);
  }
  catch (Exception $ex) {
    $code = $ex->getCode();
    if (!$code)
      $code = '500';

    // For security reasons, don't show specific messages for 500 errors
    // unless the user is an admin.
    if ($code == 500 && !user_access('administer permissions')) {
      $result->message = 'Internal Server Error';
      drupal_add_http_header('Status', $code);
    }
    else {
      $result->message = $ex->getMessage();
      drupal_add_http_header('Status', $code . ' ' . $ex->getMessage());
    }
  }
  drupal_add_http_header('Content-Type', 'application/json');
  print json_encode($result);
}

function ground_php_update() {
  $result = new stdClass();
  $result->message = null;
  $result->result = new stdClass();

  if (isset($_POST['objects'])) {
    $objects = $_POST['objects'];
  }
  else {
    $json = file_get_contents("php://input");
    $data = json_decode(utf8_encode($json));
    if ($data)
      $objects = $data->objects;
  }

  $ground = ground_php_initialize_ground();
  try {
    if (!$objects) {
      throw new Exception('Missing object list', 400);
    }
    if (!count($objects)) {
      throw new Exception('Object list is empty', 400);
    }
    $result->result = $ground->update_objects($objects);
    if (count($result->result->failures) > 0) {
      drupal_add_http_header('Status', 500);
      $result->success = false;
    }
    else {
      $result->success = true;
    }
  }
  catch (Exception $ex) {
    $code = $ex->getCode();
    if (!$code)
      $code = '500';

    drupal_add_http_header('Status', $code);
    $result->message = $ex->getMessage();
    $result->objects = $objects;
    $result->success = false;
  }
  $result->objects = $objects;

  drupal_add_http_header('Content-Type', 'application/json');
  print json_encode($result);
}

