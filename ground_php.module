<?php

function ground_php_menu() {
  $items['vineyard/model.json'] = array(
      'title' => 'Vineyard Model',
      'page callback' => 'ground_php_model',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['vineyard/get'] = array(
      'title' => 'Ground Get',
      'page callback' => 'ground_php_get',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['vineyard/get/%'] = array(
      'title' => 'Ground Get',
      'page callback' => 'ground_php_get',
      'page_arguments' => array(2),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['vineyard/update'] = array(
      'title' => 'Ground Update',
      'page callback' => 'ground_php_update',
      'access callback' => user_is_logged_in,
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function ground_php_initialize_ground() {
  if (Ground::$vineyard_ground)
    return Ground::$vineyard_ground;
  Ground::$vineyard_ground = $ground = new Ground(Ground::$default_database);
  module_invoke_all('ground', $ground);
  return $ground;
}

function ground_php_model() {
  $ground = ground_php_initialize_ground();
  drupal_set_header('Content-Type: application/json');
  print $ground->to_json();
}

function ground_php_update() {
  if (isset($_POST['objects'])) {
    $objects = $_POST['objects'];
  }
  else {
    $json = file_get_contents("php://input");
    $data = json_decode(utf8_encode($json));
    if ($data)
      $objects = $data->objects;
  }

  $ground = ground_php_initialize_ground();

  try {
    foreach ($objects as $seed) {
      $seed = (object) $seed;
      $result = $ground->insert_object($seed->trellis, $seed);
    }
    $result->success = true;
  }
  catch (Exception $ex) {
    $result->message = $ex->getMessage();
    $result->success = false;
  }
  drupal_json($result);
}

function ground_php_get($trellis = null) {
  $ground = ground_php_initialize_ground();
  if (!$ground)
    throw new Exception('Ground not initialized.');

  if (!$ground->db)
    throw new Exception('Ground DB not initialized.');

  if (!$trellis)
    $trellis = $_GET['trellis'];

  $query = $ground->create_query($trellis);

  // Currently only works for int types.
  foreach ($_GET as $key => $value) {
    if ($key != 'trellis' && array_key_exists($key, $query->trellis->properties)) {
      $property = $query->trellis->properties[$key];      
      $query->add_filter($query->trellis->get_table_name() . '.' . $property->get_field_name() . ' = ' . (int) $value);
    }
  }
  //$query->add_post('ORDER BY name');

  $result = $query->run_as_service(true);
  drupal_set_header('Content-Type: application/json');
  print json_encode($result);
}
